//
//  ListCounterPresenter.swift
//  CounterApp
//
//  Created Gerardo Ojeda on 12-02-19.
//  Copyright © 2019 Gerardo Ojeda. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ListCounterPresenter {

    weak private var view: ListCounterViewProtocol?
    var interactor: ListCounterInteractorProtocol?
    private let router: ListCounterWireframeProtocol

    init(interface: ListCounterViewProtocol, interactor: ListCounterInteractorProtocol?, router: ListCounterWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
}

extension ListCounterPresenter: ListCounterPresenterProtocol {
    
    //INPUT
    func viewDidLoad() {
        self.fetchAllCounters()
    }
    
    func fetchAllCounters() {
        interactor?.fetchAllCounters()
    }
    
    func addCounter(title: String) {
        interactor?.addCounter(title: title)
    }
    
    func increaseCounter(id: String) {
        interactor?.increaseCounter(id: id)
    }
    
    func decreaseCounter(id: String) {
        interactor?.decreaseCounter(id: id)
    }
    
    func deleteCounter(id: String) {
        interactor?.deleteCounter(id: id)
    }
    
    func showDialogAddCounter() {
        router.showDialogAddCounter()
    }
    
    //OUTPUT
    func countersFetchedSuccess(counters: CountersResponse) {
        view?.updateUIWith(counters)
    }
    
    func countersFetchedError(error: Error) {
        view?.showError(error: error)
    }
}
